import re

# Pattern 1: Simple match
pattern1 = re.compile(r'abc')
result1 = pattern1.match('abcdef')
if result1:
    print("Match found:", result1.group())

# Metacharacters:
# . (dot): Matches any character except a newline.
# *: Matches zero or more occurrences of the preceding character or group.
# +: Matches one or more occurrences of the preceding character or group.
# ?: Matches zero or one occurrence of the preceding character or group.
# ^: Anchors the match at the beginning of the string.
# $: Anchors the match at the end of the string.

# Character Classes: A set of characters enclosed in square brackets []. 
# For example, [aeiou] matches any vowel.

# Pattern 2: Dot matches any character
pattern2 = re.compile(r'.')
result2 = pattern2.search('Hello')
if result2:
    print("Character found:", result2.group())

# Pattern 3: Match any vowel
pattern3 = re.compile(r'[aeiou]')
result3 = pattern3.search('Hello')
if result3:
    print("Vowel found:", result3.group())

# Quantifiers:
# {n}: Matches exactly n occurrences.
# {n,}: Matches n or more occurrences.
# {n,m}: Matches between n and m occurrences.

# Pattern 4: Social Security Number format
pattern4 = re.compile(r'\d{3}-\d{2}-\d{4}')
result4 = pattern4.match('123-45-6789')
if result4:
    print("Social Security Number:", result4.group())

# Pattern 5: Match a dot
pattern5 = re.compile(r'\.')
result5 = pattern5.search('www.example.com')
if result5:
    print("Dot found:", result5.group())

# Pattern 6: Date in dd/mm/yyyy format
pattern6 = re.compile(r'(\d{2})/(\d{2})/(\d{4})')
result6 = pattern6.match('01/09/2024')
if result6:
    print("Day:", result6.group(1))
    print("Month:", result6.group(2))
    print("Year:", result6.group(3))

# Alternation: The pipe | symbol is used for matching one pattern or another.
# cat|dog: Matches either "cat" or "dog."

# Pattern 7: Match "cat" or "dog"
pattern7 = re.compile(r'cat|dog')
result7 = pattern7.search('I have a cat and a dog')
if result7:
    print("Animal found:", result7.group())

